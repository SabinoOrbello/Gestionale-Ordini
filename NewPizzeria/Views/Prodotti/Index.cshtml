@model IEnumerable<NewPizzeria.Models.Prodotti>

<div class="container bgContainer mt-3">
    <div class="row g-4 prodottiColor">
        @if (Request.IsAuthenticated && !User.IsInRole("Admin"))

        {
        <h2 class="fTitle mt-4">Le Nostre Pizze</h2>
        <div>
            <button type="button" class="btn btn-warning position-relative fw-bold" onclick="window.location.href='@Url.Action("Cart", "Ordini")'">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cart3 " viewBox="0 0 16 16" >
                <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .49.598l-1 5a.5.5 0 0 1-.465.401l-9.397.472L4.415 11H13a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5M3.102 4l.84 4.479 9.144-.459L13.89 4zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4m7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2m7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2" />
            </svg>
                Carrello
                <span id="cart-item-count" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">0</span>
            </button>
        </div>





            foreach (var item in Model)
            {
                <div class="col-3">
                    <div class="card h-100 border border-3 border-danger bg-transparent cart">
                        <div class="card-img-top">
                            <img src="@Url.Content(string.IsNullOrEmpty(item.Image) ? "~/Content/Images/hotel.jpg" : item.Image)" style="height:200px; width:600px" class="img-fluid" alt="...">
                        </div>
                        <div class="card-body bg-transparent">
                            <h5 class="card-title text-white fs-3"> @Html.DisplayFor(modelItem => item.Name)</h5>
                            <p class="card-text text-truncate text-white"><span class="badge text-bg-warning fw-bold  text-truncate">Ingredienti</span> : @Html.DisplayFor(modelItem => item.Ingredients)</p>
                            <span> @Html.ActionLink("Scopri di più", "Details", new { id = item.ProductId }, new { @class = "btn btn-warning fw-bold mb-2 butt" })</span> <br />
                            <p class="badge text-bg-warning ">Tempo di consegna: @Html.DisplayFor(modelItem => item.DeliveyTime)</p>
                            <div class="input-group mb-3">
                                <input type="number" class="form-control quantity-input" value="1" min="1">
                                <button class="btn btn-success butt fw-bold add-to-cart" data-id="@item.ProductId">Aggiungi al carrello</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {

    <div class="container">
        <h2 class="fTitle">BackOffice</h2>
        <div class="row g-4">
            <div class="col-3">
                <div class="card h-100" style="width: 18rem;">
                    <img src="~/Content/Images/card-5.jpg" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Visualizza gli Ordini</h5>

                        <p> @Html.ActionLink("Lista Ordini", "Index", "Ordini", new { area = "" }, new { @class = "btn btn-primary" })</p>
                    </div>
                </div>
            </div>
            <div class="col-3">
                <div class="card" style="width: 18rem;">
                    <img src="~/Content/Images/card-2.jpg" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Ordine Dettagli</h5>

                        <p> @Html.ActionLink("Dettaglio Ordine", "Index", "DettaglioOrdini", new { area = "" }, new { @class = "btn btn-primary" })</p>
                    </div>
                </div>
            </div>

            <div class="col-3">
                <div class="card" style="width: 18rem;">
                    <img src="~/Content/Images/card-3.jpg" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Ordini da Evadere</h5>

                        <p> @Html.ActionLink("Ordini da Evadere", "OrdiniFinalizzati", "Ordini", new { area = "" }, new { @class = "btn btn-primary" })</p>
                    </div>
                </div>
            </div>

            <div class="col-3">
                <div class="card" style="width: 18rem;">
                    <img src="~/Content/Images/card-4.jpg" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Ordini Evasi</h5>

                        <p> @Html.ActionLink("Ordini Evasi", "OrdiniEvasi", "Ordini", new { area = "" }, new { @class = "btn btn-primary" })</p>
                    </div>
                </div>
            </div>

            <div class="col-3">
                <div class="card" style="width: 18rem;">
                    <img src="~/Content/Images/card-7.jpg" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">Ordini Evasi</h5>

                        <p> @Html.ActionLink("Lista Prodotti", "IndexAdmin", "Prodotti", new { area = "" }, new { @class = "btn btn-primary" })</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
        }
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            // Funzione per ottenere il numero di prodotti nel carrello
            function updateCartItemCount() {
                $.ajax({
                    url: '/Ordini/GetCartItemCount',
                    type: 'GET',
                    success: function (response) {
                        $('#cart-item-count').text(response);
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.error("Errore durante il recupero del numero di prodotti nel carrello:", errorThrown);
                    }
                });
            }

            // Aggiorna il numero di prodotti nel carrello quando la pagina è pronta
            updateCartItemCount();

            $('.add-to-cart').click(function () {
                var productId = $(this).data('id');
                var quantity = $(this).closest('.card-body').find('.quantity-input').val(); // Ottieni la quantità dal campo di input

                $.ajax({
                    url: '/Ordini/AddToCart',
                    type: 'POST',
                    data: { id: productId, quantity: quantity }, // Includi la quantità nei dati della richiesta
                    success: function (response) {
                        // Aggiorna il carrello nella UI
                        alert("Prodotto aggiunto al carrello con successo!");
                        // Aggiorna il numero di prodotti nel carrello
                        updateCartItemCount();
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        // Gestisci eventuali errori qui
                        alert("Si è verificato un errore durante l'aggiunta del prodotto al carrello.");
                    }
                });
            });
        });



    </script>
}
